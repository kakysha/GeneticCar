using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using SpriteLibrary;
using System.Threading;
using System.IO;

namespace MaterialStrength
{
	public partial class Form1 : Form
	{
		SpriteEngine engine = new SpriteEngine();
		bool active = false;
		private Random rnd = new Random(DateTime.Now.Millisecond);
		private Thread _thrdAnimate;
		private int _lastSecond = -1;
		private int _compareSecond;
		private int _actualFPS;
		private DateTime _dtStamp;
		private int _frames = 0;
		private DateTime _nextFrameTime;
		private TimeSpan _animationSpan = new TimeSpan(0, 0, 0, 0, 10);
		private Bitmap _buffer = new Bitmap(1, 1);
		bool _wrapAroundEdges = true;
		bool _detectCollision = true;
		private int _width, _height;
		private byte img_flag = 0;

		public Form1() {
			InitializeComponent();
			_width = panel1.Left;
			_height = panel2.Top;
			engine.SurfaceSize = new Size(_width, _height);
			engine.OffSetX = panel3.Left;
			engine.OffSetY = panel4.Top;
			this.DoubleBuffered = true;
            
            active = true;
            //Создание потока для анимации
            _thrdAnimate = new Thread(AnimateProc);
            _thrdAnimate.IsBackground = true;

            //Устанавливаем время следующего обновления кадра
            _nextFrameTime = DateTime.Now;

            //Активация потока
            _thrdAnimate.Start();
		}

		protected void AnimateProc() {
			while (active) {
				//Рендеринг кадра
				if (DateTime.Now > _nextFrameTime) {
					_nextFrameTime = DateTime.Now + _animationSpan;

					engine.MoveSprites();

					//Обработка выхода за границы
					if (_wrapAroundEdges)
						engine.WrapSprites();

					//Обработка столкнвоений
					if (_detectCollision)
						engine.PerformSelfCollisionDetection();

					//Удаляем на всякий случай мертвые спрайты
					engine.RemoveDeadSprites();

					//Перерисовка формы
					Invalidate();
				} else
					Thread.Sleep(5);
			}
		}

		private void polygon_btn_Click(object sender, EventArgs e) {
			PointF[] points = new PointF[4];
			points[0] = new PointF(0, 40);
			points[1] = new PointF(40, 40);
			points[2] = new PointF(40, 0);
			points[3] = new PointF(0, 0);
			PolygonSprite ps = new PolygonSprite(points);

			ps.Color = Color.Black;
			ps.IsFilled = true;
			ps.FillColor = Color.Red;
			ps.Spin = SpinType.Clockwise;
			ps.SpinSpeed = 0;
			ps.PositionF = new PointF(_width / 2, _height / 2);
			engine.AddSprite(ps);
			DestinationMover dm = engine.GetMover(ps);
			dm.Speed = 0;
			dm.DestinationF = new PointF(rnd.Next(_width), rnd.Next(_height));
			dm.StopAtDestination = false;
		}


		private void bmpsprt_button_Click(object sender, EventArgs e) {
			//Создание объекта граф. спрайта
			BitmapSprite s = new BitmapSprite((Bitmap) pictureBox1.Image);
			//s.Bitmap.MakeTransparent(Color.Black);
			s.Bitmap.MakeTransparent(Color.White);

			//Центрируем
			s.PositionF = new PointF(_width / 2, _height / 2);
			//Задаем вращение
			s.Spin = SpinType.CounterClockwise;
			s.SpinSpeed = 1;
			//Добавляем обхъект в движок
			engine.AddSprite(s);

			//Устанвливаем скорость перемещения и направление
			DestinationMover dm = engine.GetMover(s);
			dm.Speed = 0;
			dm.DestinationF = new PointF(rnd.Next(_width), rnd.Next(_height));
			dm.StopAtDestination = false;
		}

        private void Form1_Paint(object sender, PaintEventArgs e) {
            //Изменяет размер буфера
            if (_buffer.Width != _width)
                _buffer = new Bitmap(_width, _height);

            try {
                //Создаем графический объект из буфера
                Graphics grBuffer = Graphics.FromImage(_buffer);
                grBuffer.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;

                //Создаем графический объект из рабочей области
                Graphics grSurface = e.Graphics;

                using (grBuffer) {
                    grBuffer.Clear(Color.Transparent);
                    //Прорисовка спрайтов
                    Rectangle viewport = new Rectangle(panel3.Left, panel4.Top, _width, _height);

                    lock (engine.Sprites) {
                        foreach (Sprite sprite in engine.Sprites)
                            if (sprite.Bounds.IntersectsWith(viewport))
                                sprite.Render(grBuffer);
                    }



                    //Копируем буфер в рабочую область
                    grSurface.DrawImage(_buffer, 0, 0);

                    //Прячем области за границей поля
                    Brush b = new SolidBrush(this.BackColor);
                    grSurface.FillRectangle(b, 0, 0, panel3.Left, panel2.Top);
                    grSurface.FillRectangle(b, 0, 0, panel1.Left, panel4.Top);

                    //Прошла секунда, высчитываем фпс
                    _dtStamp = DateTime.Now;
                    _compareSecond = _dtStamp.Second;
                    if (_compareSecond != _lastSecond) {
                        //выводим фпс
                        if (_lastSecond != -1)
                            _actualFPS = _frames;
                        fps_label.Text = _actualFPS.ToString();
                        _frames = 1;
                        _lastSecond = _compareSecond;
                    }
                    else
                        _frames++;
                }
            }
            /*catch {

            }*/
            finally {

            }
        }

		private void button3_Click(object sender, EventArgs e) {
			engine.Clear();
		}

        private void Form1_MouseDown(object sender, MouseEventArgs e) {
            //Убиываем спрайт при клике
            Point pt = new Point(e.X, e.Y);

            lock (engine.Sprites) {
                foreach (Sprite sprite in engine.Sprites) {

                    //ресайз
                    if (sprite is MovableSprite) {
                        MovableSprite mSprite = (MovableSprite)sprite;
                        int i = 0;
                        foreach (RectangleF r in mSprite.Corners) {
                            if (r.Contains(pt)) {
                                engine.ClickedCornerInd = i;
                                engine.MovingSprite = sprite;
                                engine.MovingStartPoint = new Point(pt.X, pt.Y);
                                if (sprite is BitmapSprite) {
                                    BitmapSprite bmSprite = (BitmapSprite)sprite;
                                    bmSprite.tempBitmap = bmSprite.Bitmap;
                                }
                                return;
                            }
                            i++;
                        }
                    }

                    //перемещение
                    if (sprite.ClickBounds.Contains(pt)) {
                        engine.MovingStartPoint = new Point(pt.X - (int)sprite.X, pt.Y - (int)sprite.Y);
                        engine.MovingSprite = sprite;
                    }
                }
            }

        }

        private void Form1_MouseMove(object sender, MouseEventArgs e) {
            if (engine.ClickedCornerInd > -1) { // resize sprite
                if (engine.MovingSprite is MovableSprite) {
                    MovableSprite mvSprite = (MovableSprite)engine.MovingSprite;
                    mvSprite.Resize(new PointF(e.Location.X - engine.MovingStartPoint.X, e.Location.Y - engine.MovingStartPoint.Y), engine.ClickedCornerInd);

                    //Информация о размере
                    var g = this.CreateGraphics();
                    g.DrawString("Width: " + mvSprite.Shape.Width + "\nHeight: " + mvSprite.Shape.Height, new Font("Arial", 6), new SolidBrush(Color.Black), e.Location);

                    engine.MovingStartPoint = e.Location;
                } 
                return;
            }
            if (!engine.MovingStartPoint.IsEmpty && engine.ClickedCornerInd == -1) { // move sprite
                engine.MovingSprite.PositionF = new PointF(e.Location.X - engine.MovingStartPoint.X, e.Location.Y - engine.MovingStartPoint.Y);
                return;
            }
        }

        private void Form1_MouseUp(object sender, MouseEventArgs e) {
            engine.MovingStartPoint = new Point();
            engine.ClickedCornerInd = -1;
        }

        private void Form1_DoubleClick(object sender, EventArgs e) {
            Point mP = new Point(MousePosition.X - this.Location.X - 10, MousePosition.Y - this.Location.Y - 30);
             lock (engine.Sprites) {
                 foreach (Sprite sprite in engine.Sprites) {
                     if (sprite.ClickBounds.Contains(mP)) sprite.Kill();
                 }
             }
        }

	}
}