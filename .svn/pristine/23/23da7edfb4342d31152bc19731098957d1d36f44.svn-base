using System;
using System.Collections.Generic;
using System.Text;
using System.Drawing;

namespace SpriteLibrary
{
    public class BitmapSprite : MovableSprite
    {
        private Bitmap _bitmap;
        public Bitmap tempBitmap;

        //Constructor
        public BitmapSprite(Bitmap bitmap) {
            Bitmap = bitmap;

            //Вычисление углов для захвата
            _corners = new RectangleF[4];
            _corners[0] = new RectangleF(-4, -4, 8, 8);
            _corners[1] = new RectangleF(-4 + Shape.Width, -4, 8, 8);
            _corners[2] = new RectangleF(-4 + Shape.Width, -4 + Shape.Height, 8, 8);
            _corners[3] = new RectangleF(-4, -4 + Shape.Height, 8, 8);
        }

        //Прорисовка
        public override void Render(Graphics g)
        {
            g.DrawImage(Bitmap, X, Y);

            renderCorners(g);
        }

        public Bitmap Bitmap
        {
            get
            {
                return _bitmap;
            }
            set
            {
                _bitmap = value;
                if (_bitmap != null)
                    Shape = new RectangleF(0, 0, _bitmap.Width, _bitmap.Height);
                
                //Вычисление углов для захвата
                _corners = new RectangleF[4];
                _corners[0] = new RectangleF(-4, Shape.Height-4, 8,8);
                _corners[1] = new RectangleF(Shape.Width-4, Shape.Height-4, 8, 8);
                _corners[2] = new RectangleF(Shape.Width-4, -4, 8, 8);
                _corners[3] = new RectangleF(-4, -4, 8, 8);
            }
        }

        public override void Resize(PointF p, int ind) {

            int newWidth = Bitmap.Width + (int)p.X;
            int newHeight = Bitmap.Height + (int)p.Y;
            if (newWidth <= 0 || newHeight <= 0) return;
            Bitmap result = new Bitmap(newWidth, newHeight);
            using (Graphics g = Graphics.FromImage(result))
                g.DrawImage(tempBitmap, 0, 0, newWidth, newHeight);
            Bitmap = result;
        }
        //Вращение
       /* protected internal override void Process()
        {
            Bitmap bmp = new Bitmap(_bitmap.Width, _bitmap.Height);
            Graphics gfx = Graphics.FromImage(bmp);
            gfx.TranslateTransform((float)bmp.Width / 2, (float)bmp.Height / 2);
            gfx.RotateTransform(-1);
            gfx.TranslateTransform(-(float)bmp.Width / 2, -(float)bmp.Height / 2);
            gfx.DrawImage(_bitmap, new Point(0, 0));
            gfx.Dispose();
            _bitmap = new Bitmap(bmp);
        } */

    }
}

